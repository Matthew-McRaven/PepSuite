stages:
- test
- docs

variables:
  BUILD_VERSION: v0.1.0

.emscripte: &emscripten
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  image: registry.gitlab.com/pep10/pepsuite/develop:${BUILD_VERSION}
  before_script:
    - source /emsdk/emsdk_env.sh
    - export CXX=$(which clang++)
    - export C=$(which clang)

test:builtins:
  <<: *emscripten
  stage: test
  needs: []
  script:
    - cd lib/builtins
    - (cd gen && python3 gen.py)
    - mkdir build && cd build
    - cmake ../
    - make -j4 && make test

test:core:native:
  <<: *emscripten
  stage: test
  needs: []
  script:
    - cd lib/core
    # lcov_cobertura expects python3 to be named python.
    - ln -s $(which python3) /usr/bin/python
    - mkdir build
    - cmake -B build -DCMAKE_C_COMPILER=$(which clang) -DCMAKE_CXX_COMPILER=$(which clang++) -DCMAKE_BUILD_TYPE=Debug -Dcode_coverage=1
    - (cd build && make -j4 && make test -j4)
    - python3 llvm-cov-helper.py build
    - python3 lcov_cobertura.py coverage.lcov
    # Job output must contain code coverage.
    - lcov --summary coverage.lcov
    - mv coverage.xml ../../coverage.xml
  coverage: '/^\s*lines.*/'
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    reports:
      cobertura: coverage.xml

test:core:wasm:
  <<: *emscripten
  stage: test
  needs: []
  script:
    - cd lib/core
    - mkdir build && cd build
    - emcmake cmake -DBoost_INCLUDE_DIR=/boost/ -DCMAKE_BUILD_TYPE=RelWithDebInfo ../ 
    - emmake make -j4
    - emmake make test -j4

docs:core:
  <<: *emscripten
  stage: docs 
  needs: ["test:core:native"]
  script:
    - mkdir -p build/docs && mkdir -p build/docs/md
    - cd lib/core
    - npm install moxygen -g
    - (cd docs && doxygen)
    - ls ../../..
    - cd ../../../build/docs/md
    - moxygen ../xml
  artifacts:
    expire_in: 1 week
    paths:
      - build/docs/html/
      - build/docs/latex/
      - build/docs/xml/
      - build/docs/md/
