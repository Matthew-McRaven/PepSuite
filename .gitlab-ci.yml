stages:
- packages/native
- packages/ui
- packages/theia
- test
- chromatic
- binaries
- docs
- deploy

# Variables that must be injected into every pipeline
variables:
  BUILD_VERSION: v0.2.6
  GIT_LFS_SKIP_SMUDGE: '1'

##################
# Helper anchors #
##################
# A well-configured emscripten environment
.emscripten: &emscripten
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  image: registry.gitlab.com/pep10/pepsuite/develop:${BUILD_VERSION}
  before_script:
    - apt update
    - apt-get install git-lfs
    - source /emsdk/emsdk_env.sh
    - export CXX=$(which clang++-14)
    - export C=$(which clang-14)
    - yarn config set cache-folder ./npm

# Enable npm caching on all stages
.cacheable-node: &cacheable-node 
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

####################
# Native Libraries #
####################

build:builtins:
  <<: *emscripten
  stage: packages/native
  needs: []
  script:
    - cd packages/native/builtins
    - (cd gen && python3 gen.py)
    - mkdir build && cd build
    - cmake ../ -DENABLE_TESTING=1
    - make -j4 && make test
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 1 week
    reports:
      junit: packages/native/builtins/build/**/junit.xml

build:core:linux:
  <<: *emscripten
  stage: packages/native
  needs: []
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - yarn wasm build:coverage
    - mv packages/native/core/coverage.xml coverage.xml
  coverage: '/^\s*lines.*/'
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    reports:
      cobertura: coverage.xml
      junit: packages/native/core/build/**/junit.xml

build:core:wasm:
  <<: *emscripten
  stage: packages/native
  needs: []
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - yarn wasm build:wasm
    - yarn wasm dist
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    paths:
      - packages/native/core/dist/

docs:core:
  <<: *emscripten
  stage: docs 
  needs: ["build:core:linux"]
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - yarn wasm build:docs
  artifacts:
    expire_in: 1 week
    paths:
      - packages/native/core/build/docs/


###############
# UI Packages #
###############

build:ui:
  <<: *emscripten
  <<: *cacheable-node
  stage: packages/ui
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - yarn ui:build

test:ui:
  <<: *emscripten
  <<: *cacheable-node
  stage: test
  needs: ["build:ui"]
  script:
    - yarn install --immutable --immutable-cache --check-cache  
    - yarn ui:test
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - packages/**/junit.xml

# Chromatic test
test:chromatic:
  <<: *emscripten
  <<: *cacheable-node
  stage: chromatic
  needs: ['test:ui']
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - cd packages/ui
    - npx chromatic --exit-zero-on-changes --project-token ${CHROMATIC_PROJECT_TOKEN} --junit-report junit.xml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == 'dev'
      when: on_success
      changes:
        - packages/ui/**/*
  artifacts:
    expire_in: 1 week
    when: always
    reports:
      junit:
        - packages/ui/junit.xml

#################
# Version Bumps #
#################
versions:bump:
  <<: *emscripten
  # Ignore cache, as cache seems to break chromatic  
  stage: deploy
  needs: ['build:core:wasm', 'test:ui']
  script:
    - yarn install --immutable --immutable-cache --check-cache
    - |
      {
        echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/"
        echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}"
      } | tee --append .npmrc
    - git fetch && git symbolic-ref -q HEAD > /dev/null || (git branch -d ${CI_COMMIT_REF_NAME} || true && git checkout -b ${CI_COMMIT_REF_NAME} && git branch --set-upstream-to=origin/${CI_COMMIT_REF_NAME} ${CI_COMMIT_REF_NAME})
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    # Needed to push from CI pipeline
    # See https://stackoverflow.com/questions/65234416/gitlab-ci-cd-cannot-git-push-from-gitlab-ci-yml
    - git remote set-url origin "https://gitlab-ci-token:$PROJECT_ACCESS_TOKEN@$CI_SERVER_HOST/$CI_PROJECT_PATH.git"
    # Magic to make these files look like they haven't been changed, allowing me to `lerna publish`
    - git update-index --assume-unchanged .npmrc packages/native/core/dist/* yarn.lock
    - export NPM_CONFIG_REGISTRY=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm
    - echo ${NPM_CONFIG_REGISTRY}
    - echo $(git diff)
    - "npx lerna publish -m \"build: release %v [skip ci]\" --conventional-commits --changelog-preset angular --yes"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - packages/**/*
        - bin/**/*
