image: docker:19

variables:
  REMOTE_IMAGE: 10.0.0.8:15050/matthew-mcraven/latex
  CI_VERSION: ci.${CI_COMMIT_SHORT_SHA}
  
# This file is a template, and might need editing before it works on your project.

docker-build-master:
  # Official docker image.
  image: docker:dind
  stage: build
  before_script:
    - docker login -u ${CI_USER} -p ${CI_TOKEN} ${CI_REGISTRY}
  script:
    - docker build . -t ${REMOTE_IMAGE}:${CI_VERSION}
    - docker push ${REMOTE_IMAGE}:${CI_VERSION}

Deploy images:
  stage: deploy
  # Don't clone any code at all.
  # See: https://gitlab.com/gitlab-org/gitlab-foss/-/issues/21337
  variables:
    GIT_STRATEGY: none
  # The script does as follows:
  # For each image, pull the remote image associated with the current commit's CI build.
  # Retag the CI build with the commit tag.
  # Push the image back to the NAS with the new tag.
  script:
    - docker pull ${REMOTE_IMAGE}:${CI_VERSION}
    - docker tag  ${REMOTE_IMAGE}:${CI_VERSION} ${REMOTE_IMAGE}:${CI_COMMIT_TAG}
    - docker push ${REMOTE_IMAGE}:${CI_COMMIT_TAG}
    - docker rmi  ${REMOTE_IMAGE}:${CI_VERSION} ${REMOTE_IMAGE}:${CI_COMMIT_TAG}
  after_script:
    - echo "Deployment finished."
  only:
    - tags
